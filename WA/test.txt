# ================INSTALL & INTEGRATE WAZUH===================

```sh

sudo su 

df -h /
sudo lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
sudo resize2fs /dev/ubuntu-vg/ubuntu-lv
df -h /

#https://documentation.wazuh.com/current/installation-guide/wazuh-indexer/installation-assistant.html

curl -sO https://packages.wazuh.com/4.12/wazuh-install.sh
curl -sO https://packages.wazuh.com/4.12/config.yml
nano config.yml
bash wazuh-install.sh --generate-config-files
curl -sO https://packages.wazuh.com/4.12/wazuh-install.sh
bash wazuh-install.sh --wazuh-indexer node-1
bash wazuh-install.sh --start-cluster
tar -axf wazuh-install-files.tar wazuh-install-files/wazuh-passwords.txt -O | grep -P "\'admin\'" -A 1
curl -k -u admin:<ADMIN_PASSWORD> https://<WAZUH_INDEXER_IP>:9200
curl -k -u admin:<ADMIN_PASSWORD> https://<WAZUH_INDEXER_IP>:9200/_cat/nodes?v

#https://documentation.wazuh.com/current/installation-guide/wazuh-server/installation-assistant.html

bash wazuh-install.sh --wazuh-server wazuh-1

#https://documentation.wazuh.com/current/installation-guide/wazuh-dashboard/installation-assistant.html

bash wazuh-install.sh --wazuh-dashboard dashboard

sudo ufw allow 1514/tcp  # Agent Wazuh
sudo ufw allow 55000/tcp # API
sudo ufw allow 9200/tcp  # Indexer
sudo ufw allow 5601/tcp  # Dashboard
sudo ufw allow OpenSSH   # Connexion SSH
sudo ufw enable

nano /var/ossec/etc/internal_options.conf

```sh
vulnerability-detection.disable_scan_manager=1 --> vulnerability-detection.disable_scan_manager=0
```

# ================WAZUH & IRIS===================

(DFIR-IRIS PART)

https://docs.dfir-iris.org/getting_started/

### Wazuh & IRIS Integration ###

https://github.com/nateuribe/Wazuh-IRIS-integration

iris-shuffle@iris-shuffle:~/iris-web/docker/webApp$ nano Dockerfile

```sh
FROM python:3.9 AS compile-image
RUN apt-get update

RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# âœ… Mise Ã  jour des outils setuptools/pip/packaging
RUN pip install --upgrade pip setuptools packaging

COPY source/dependencies /dependencies
COPY source/requirements.txt /

# ðŸ“¦ Installation des dÃ©pendances
RUN pip3 install -r requirements.txt
```

# iris-shuffle@iris-shuffle:~/iris-web/docker/nginx$ nano Dockerfile

```sh
FROM nginx:1.21.3

RUN sed -i 's|http://deb.debian.org/debian|http://archive.debian.org/debian|g' /etc/apt/sources.list && \
    sed -i 's|http://security.debian.org/debian-security|http://archive.debian.org/debian-security|g' /etc/apt/sources.list && \
    apt-get update && apt-get install -y curl

```

docker-compose buid 
docker-compose up -d

---------------------

root@siem:/home/siem# git clone https://github.com/nateuribe/Wazuh-IRIS-integration.git
root@siem:/home/siem# cd Wazuh-IRIS-integration/
root@siem:/home/siem/Wazuh-IRIS-integration# nano custom-iris.py

```sh
# Send request to IRIS
response = requests.post(hook_url, verify=False, data=payload, headers={"Authorization": "Bearer " + api_key, "content-type": "application/json"})
```

root@siem:/home/siem/Wazuh-IRIS-integration# cp custom-iris.py /var/ossec/integrations/custom-iris.py
root@siem:/home/siem/Wazuh-IRIS-integration# chmod 750 /var/ossec/integrations/custom-iris.py
root@siem:/home/siem/Wazuh-IRIS-integration# chown root:wazuh /var/ossec/integrations/custom-iris.py

root@siem:/home/siem/Wazuh-IRIS-integration# nano /var/ossec/etc/ossec.conf

```sh
<!-- ... Rest of config ... -->

<!-- IRIS integration -->
<integration>
  <name>custom-iris.py</name>
  <hook_url>https://IRIS-BASE-URL/alerts/add</hook_url>
  <level>4</level>
  <api_key>APIKEY</api_key>
  <alert_format>json</alert_format>
</integration>

<!-- ... Rest of config ... -->
```

root@siem:/home/siem/Wazuh-IRIS-integration# sudo systemctl restart wazuh-manager.service
root@siem:/home/siem/Wazuh-IRIS-integration# tail -f /var/ossec/logs/integrations.log
root@siem:/home/siem/Wazuh-IRIS-integration# echo "ALERTE WAZUH TEST" >> /etc/passwd
root@siem:/home/siem/Wazuh-IRIS-integration# tail -f /var/ossec/logs/alerts/alerts.json

-------------------------SHUFFLE---------------------------

root@siem:/home/siem# nano /var/ossec/etc/ossec.conf

```sh
<integration>
  <name>shuffle</name>
  <hook_url>http://SHUFFLE-IP:3001/api/v1/hooks/webhook_786fa665-8f8d-418a-b12e-d44144a76a72 </hook_url>
  <rule_id>100002</rule_id>
  <alert_format>json</alert_format>
</integration>
```

root@siem:/home/siem# sudo systemctl restart wazuh-manager

```sh
<rule id="100002" level="15">
  <if_group>sysmon_event1</if_group>
  <field name="win.eventdata.originalFileName" type="pcre2">(?i)mimikatz\.exe</field>
  <description>Mimikatz Usage Detected</description>
  <mitre>
    <id>T1003</id>
  </mitre>
</rule>
```

=================VELOCIRAPTOR================================
velo@velo:~/velo$ wget https://github.com/Velocidex/velociraptor/releases/download/v0.72/velociraptor-v0.72.0-linux-amd64
velo@velo:~/velo$ sudo cp velociraptor-v0.72.0-linux-amd64 /usr/local/bin/velociraptor
velociraptor-v0.72.0-linux-amd64
velo@velo:~/velo$ sudo chmod +x /usr/local/bin/velociraptor
velo@velo:~/velo$ velociraptor config generate -i

velo@velo:~/velo/agent$ wget https://github.com/Velocidex/velociraptor/releases/download/v0.72/velociraptor-v0.72.0-windows-amd64.msi
velo@velo:~/velo/agent$ cp ../velociraptor-v0.72.0-linux-amd64 .
velo@velo:~/velo/agent$ chmod +x velociraptor-v0.72.0-linux-amd64
velo@velo:~/velo/agent$ chmod +x velociraptor-v0.72.0-windows-amd64.msi
velo@velo:~/velo/agent$ ./velociraptor-v0.72.0-linux-amd64 config repack --msi velociraptor-v0.72.0-windows-amd64.msi /etc/client.config.yaml windows-agent.msi
velo@velo:~/velo/agent$ ./velociraptor-v0.72.0-linux-amd64 --config /etc/client.config.yaml debian client
velo@velo:~/velo/agent$ sudo dpkg -i velociraptor_client_0.72.0_amd64.deb
